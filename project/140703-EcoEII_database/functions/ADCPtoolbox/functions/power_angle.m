%Angle minimization routine
function out=power_angle(guess, jpdf_vd, v_bins, d_bins, turbine, power_avg_max)

angle = guess(1);

d_angle = d_bins-angle;

d_theta = d_angle*pi/180;

%initialize power
jpdf_power = zeros(size(jpdf_vd));

%for each bin in distribution, calclate power generated

%Note: the assumption is that off-axis flow acts, to the first order, as a
%reduction in inflow velocity (e.g., perpendicular component reduced by
%cos(theta)

for i = 1:size(jpdf_vd,1)       %speed
    for j = 1:size(jpdf_vd,2)   %direction
        
        %calculate effective inflow velocity
        v_eff = abs(v_bins(i)*cos(d_theta(j)));
        
        %between cut-in and rated speed
        if v_eff>=turbine.cutin_u && v_eff<turbine.rated_u
            jpdf_power(i,j) = v_eff^3;
        
        %greater than rated speed
        elseif v_eff>=turbine.rated_u
            jpdf_power(i,j) = turbine.rated_u.^3;
        
        %below cut-in speed
        else
           jpdf_power(i,j) = 0; 
        end
    end
    
end

power_avg = sum(sum(jpdf_vd.*jpdf_power));  %average power generation

%minimize around power that could be generated by a passively yawing system
out = sum(power_avg-power_avg_max).^2;  %least squares minimization metric

end